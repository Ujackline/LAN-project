% Assumed runSingleLinkSim function signature:
% function result = runSingleLinkSim(K, p, N)

% Define the range of K and probability p
K_values = [1, 5, 15, 50, 100];
p_values = 0:0.01:1;  % Probability of failure from 0 to 1 with increment of 0.01
N = 1000;  % Number of iterations for each simulation

% Preallocate space for results
simulated_results = zeros(length(K_values), length(p_values));
calculated_results = zeros(length(K_values), length(p_values));

% Main simulation loop 
for i = 1:length(K_values)
    K = K_values(i);
    for j = 1:length(p_values)
        p = p_values(j);
        
        % Run the simulation
        simulated_results(i, j) = runSingleLinkSim(K, p, N);
        
        % Calculate the analytical result
        % Analytical result for average transmissions for a single link
        calculated_results(i, j) = K / (1 - p);
    end
end

% Plotting the results
for i = 1:length(K_values)
    K = K_values(i);
    figure;  % Create a new figure for each K value
    semilogy(p_values, calculated_results(i, :), 'k-', 'LineWidth', 2); hold on;
    semilogy(p_values, simulated_results(i, :), 'ko', 'MarkerFaceColor', 'w');
    
    % Title and labels
    title(sprintf('Average Number of Transmissions for K = %d', K));
    xlabel('Probability of Failure (p)');
    ylabel('Average Number of Transmissions');
    legend('Calculated Results', 'Simulated Results', 'Location', 'northwest');
    grid on; hold off;
end
